<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script
      src="https://code.jquery.com/jquery-3.7.0.min.js"
      integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g="
      crossorigin="anonymous"
    ></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
    />
    <title>REPLAYZER</title>
    <style>
      body {
        background-color: #1e1424;
      }
      .logo {
        width: 100%;
        display: flex;
        justify-content: center;
      }
      #list {
        list-style: none;
        padding-left: 0;
      }
      #list-item {
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
        cursor: pointer;
        align-items: center;
        border-style: solid;
        border-width: 1px;
        border-color: #f0f8ff;
        border-radius: 5px;
        font-size: 20px;
        margin: 10px;
        padding: 5px;
        background-color: #d4e9ed;
      }
      .uploader {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 80px;
        height: 30px;
        cursor: pointer;
        margin: 5px;
        padding: 1px;
        border-style: solid;
        border-radius: 5px;
        border-width: 1px;
        border-color: #accfff;
        color: black;
        background-color: white;
        font-size: 15px;
      }
      .uploader:hover {
        background-color: #b7b7e4;
        color: white;
      }
      #replay-upload {
        position: absolute;
        width: 0;
        height: 0;
        padding: 0;
        overflow: hidden;
        border: 0;
      }
      .header {
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
      }
      .upload-button {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 80px;
        height: 33px;
        margin: 5px;
        padding: 1px;
        cursor: pointer;
        border-style: solid;
        border-radius: 5px;
        border-width: 1px;
        font-size: 15px;
        border-color: #accfff;
        color: black;
        background-color: white;
      }
      .upload-button:hover {
        border-style: none;
        background-color: #b7b7e4;
        color: white;
      }
      .file-text {
        margin: 0;
        padding: 0;
      }
      .search-line {
        margin: 2px;
        display: flex;
        justify-content: center;
        align-items: center;
      }
      .search-input {
        font-size: 20px;
      }
    </style>
  </head>
  <body>
    <div class="logo">
      <img src="https://i.imgur.com/RHi1T2Q.png" />
    </div>
    <form>
      <div class="header">
        <input
          type="file"
          id="replay-upload"
          name="replay-upload"
          onchange="stateUpdate(this)"
        />
        <label for="replay-upload">
          <div class="uploader"><p class="file-text">SELECT</p></div>
        </label>
        <button class="upload-button" type="button" onclick="upload()">
          <p class="file-text">
            <i class="fa-solid fa-arrow-up-from-bracket"></i>
          </p>
        </button>
      </div>
    </form>
    <div class="search-line">
      <button class="upload-button" onclick="refresh()">
        <i class="fa-solid fa-arrows-rotate"></i>
      </button>
      <input class="search-input" type="text" />
      <button type="button" class="upload-button" onclick="search()">
        <p class="file-text">SEARCH</p>
      </button>
    </div>
    <ul id="list"></ul>
    <div id="loader" style="text-align: center; color: #ffffff">load more</div>
    <script>
      let count = 1;
      let observer = new IntersectionObserver(async () => {
        // setTimeout(() => {
        axios({
          method: 'get',
          url: `/get_list/${count}`,
        }).then((res) => {
          let list = res.data.data;
          let ul = document.querySelector('#list');
          for (let i = 0; i < list.length; i++) {
            let li = document.createElement('li');
            li.id = 'list-item';
            let fileid = list[i].fileid;

            let titleArea = document.createElement('div');
            let commentArea = document.createElement('div');
            let title = list[i].title.replace('_', ' ');
            titleArea.innerText = title;
            let commentNum = list[i].commentNum;
            if (commentNum !== 0) {
              commentArea.style.cssText = `
                color: #0066ff;
                font-weight: 900;
              `;
            }
            commentArea.innerText = '[' + commentNum + ']';
            li.appendChild(titleArea);
            li.appendChild(commentArea);
            li.onclick = () => {
              window.location.href = `/replay/${fileid}`;
            };
            ul.append(li);
          }
          count++;
        });
        // }, 1000);
      });
      let loader = document.querySelector('#loader');
      observer.observe(loader);

      const stateUpdate = (files) => {
        if (files.files[0].type !== 'text/html') {
          alert('리플레이 파일만 올릴 수 있습니다');
          $('#replay-upload').val('');
        }
        const READER = new FileReader();
        READER.readAsText(files.files[0], 'EUC-KR');
        let str = '';
        READER.onload = function (e) {
          str = e.target.result;
          if (
            str.includes(
              'html,body {font-family:Verdana, sans-serif;font-size:10pt;margin:0;padding:0;}body{padding:12px 0;} .battle-log {font-family:Verdana, sans-serif;font-size:10pt;} .battle-log-inline {border:1px solid #AAAAAA;background:#EEF2F5;color:black;max-width:640px;margin:0 auto 80px;padding-bottom:5px;} .battle-log .inner {padding:4px 8px 0px 8px;} .battle-log .inner-preempt {padding:0 8px 4px 8px;} .battle-log .inner-after {margin-top:0.5em;} .battle-log h2 {margin:0.5em -8px;padding:4px 8px;border:1px solid #AAAAAA;background:#E0E7EA;border-left:0;border-right:0;font-family:Verdana, sans-serif;font-size:13pt;} .battle-log .chat {vertical-',
            )
          ) {
            if (files.files.length > 0) {
              document.querySelector('.upload-button').style.cssText = `
                background-color : orange;
                color: white;
                border-color: yellow;
                `;
            }
          } else {
            alert('리플레이 파일만 올릴 수 있습니다');
            $('#replay-upload').val('');
          }
        };
      };

      const upload = async () => {
        const file = document.querySelector('#replay-upload');
        if (file.files.length == 0) {
          alert('파일을 선택해주세요');
          return;
        }
        let prompt = window.prompt('업로드할 리플레이의 제목을 작성해주세요');
        if (prompt == null) {
          return;
        }
        if (prompt.length > 0) {
          if (prompt.length > 100) {
            alert('제목은 100글자 아래로 설정해주세요');
            return;
          }
          prompt = prompt.replace(' ', '_');
          const formData = new FormData();
          formData.append('title', prompt);
          formData.append('replay-upload', file.files[0]);
          let res = await axios({
            method: 'post',
            url: '/replay_upload',
            data: formData,
            headers: {
              'Content-Type': 'multipart/form-data',
            },
          });
          if (res.data.status == '성공') {
            // let li = document.createElement('li');
            // li.id = 'list-item';
            // let fileid = res.data.fileid;
            // let title = res.data.dataName.replace('_', ' ');
            // li.innerText = title;
            // li.onclick = () => {
            //   window.location.href = `/replay/${fileid}`;
            // };
            // document
            //   .querySelector('#list')
            //   .insertBefore(li, document.querySelector('#list').firstChild);
            // $('#replay-upload').val('');
            // document.querySelector('.upload-button').style.cssText = `
            //   border-color: #accfff;
            //   color: black;
            //   background-color: white;
            //   `;
            alert('업로드 성공');
            window.location.reload();
          } else {
            alert('업로드 실패');
          }
        } else {
          alert('제목은 한 글자 이상 적어주세요');
          upload();
        }
      };

      const search = async () => {
        let keyword = document.querySelector('.search-input').value;
        keyword = keyword.replace(' ', '_');
        let res = await axios({
          method: 'post',
          url: '/search',
          data: { keyword: keyword },
        });
        if (res.data.status == '성공') {
          let list = res.data.data.reverse();
          let ul = document.querySelector('#list');
          ul.innerHTML = '';
          for (let i = 0; i < list.length; i++) {
            let li = document.createElement('li');
            li.id = 'list-item';
            let fileid = list[i].fileid;
            let title = list[i].title.replace('_', ' ');
            li.innerText = title;
            li.onclick = () => {
              window.location.href = `/replay/${fileid}`;
            };
            ul.append(li);
          }
        } else {
          alert('데이터를 불러오지 못했습니다');
        }
      };

      const refresh = () => {
        window.location.reload();
      };
    </script>
  </body>
</html>
